{"ast":null,"code":"var _jsxFileName = \"/workspaces/Glocafe1/src/components/Home/news.js\";\nimport React, { useState, useEffect } from 'react';\nimport './newsFeedStyles.css';\n\nfunction NewsFeed() {\n  const [articles, setArticles] = useState([]);\n  useEffect(() => {\n    // Fetching data from the Fastify server\n    const API_URL = \"http://localhost:5000/news\";\n    fetch(API_URL).then(response => {\n      // Log the response status and headers\n      console.log(\"Response Status:\", response.status);\n      console.log(\"Response Headers:\", response.headers);\n      return response.json();\n    }).then(data => {\n      // Log the data received\n      console.log(\"Data received:\", data); // Check if the data has an articles property (assuming the API returns data in that format)\n\n      if (data.articles) {\n        setArticles(data.articles);\n      } else {\n        console.warn(\"Expected data to have an 'articles' property but it doesn't. Check the API response format.\");\n      }\n    }).catch(error => {\n      console.error(\"Error fetching news:\", error);\n    });\n  }, []);\n  const currentDate = new Date();\n  const formattedDate = `${currentDate.toLocaleString('en-US', {\n    weekday: 'long'\n  })}, ${currentDate.getDate()} ${currentDate.toLocaleString('en-US', {\n    month: 'long'\n  })} ${currentDate.getFullYear()}`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"news-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerobjectswrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Glocafe Trading\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subhead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, formattedDate, \" - Glocafe Trading News\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collumns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, articles.map(article => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collumn\",\n    key: article.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"headline hl3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 33\n    }\n  }, article.title)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, article.description), /*#__PURE__*/React.createElement(\"figure\", {\n    className: \"figure\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"media\",\n    src: article.urlToImage,\n    alt: article.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"figcaption\", {\n    className: \"figcaption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }, article.caption || \"Caption for the image\")), /*#__PURE__*/React.createElement(\"a\", {\n    href: article.url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, \"Read more\"))))));\n}\n\nexport default NewsFeed;","map":{"version":3,"sources":["/workspaces/Glocafe1/src/components/Home/news.js"],"names":["React","useState","useEffect","NewsFeed","articles","setArticles","API_URL","fetch","then","response","console","log","status","headers","json","data","warn","catch","error","currentDate","Date","formattedDate","toLocaleString","weekday","getDate","month","getFullYear","map","article","url","title","description","urlToImage","caption"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './newsFeedStyles.css';\n\nfunction NewsFeed() {\n    const [articles, setArticles] = useState([]);\n\n    useEffect(() => {\n        // Fetching data from the Fastify server\n        const API_URL = \"http://localhost:5000/news\";\n        fetch(API_URL)\n            .then(response => {\n                // Log the response status and headers\n                console.log(\"Response Status:\", response.status);\n                console.log(\"Response Headers:\", response.headers);\n                return response.json();\n            })\n            .then(data => {\n                // Log the data received\n                console.log(\"Data received:\", data);\n    \n                // Check if the data has an articles property (assuming the API returns data in that format)\n                if (data.articles) {\n                    setArticles(data.articles);\n                } else {\n                    console.warn(\"Expected data to have an 'articles' property but it doesn't. Check the API response format.\");\n                }\n            })\n            .catch(error => {\n                console.error(\"Error fetching news:\", error);\n            });\n    }, []);\n    \n\n    const currentDate = new Date();\n    const formattedDate = `${currentDate.toLocaleString('en-US', { weekday: 'long' })}, ${currentDate.getDate()} ${currentDate.toLocaleString('en-US', { month: 'long' })} ${currentDate.getFullYear()}`;\n\n    return (\n        <div className=\"news-container\">\n            <div className=\"head\">\n                <div className=\"headerobjectswrapper\">\n                    <header>Glocafe Trading</header>\n                </div>\n                <div className=\"subhead\">{formattedDate} - Glocafe Trading News</div>\n            </div>\n            <div className=\"content\">\n                <div className=\"collumns\">\n                    {articles.map(article => (\n                        <div className=\"collumn\" key={article.url}>\n                            <div className=\"head\">\n                                <span className=\"headline hl3\">{article.title}</span>\n                            </div>\n                            <p>{article.description}</p>\n                            <figure className=\"figure\">\n                                <img className=\"media\" src={article.urlToImage} alt={article.title} />\n                                <figcaption className=\"figcaption\">{article.caption || \"Caption for the image\"}</figcaption>\n                            </figure>\n                            <a href={article.url} target=\"_blank\" rel=\"noopener noreferrer\">Read more</a>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default NewsFeed;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _every from \"lodash/every\";\nimport _mapValues from \"lodash/mapValues\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nimport { getTicksOfScale, parseScale, checkDomainOfScale, getBandSizeOfAxis } from './ChartUtils';\nimport { findChildByType } from './ReactUtils';\nimport { getPercentValue } from './DataUtils';\nimport { Bar } from '../cartesian/Bar';\n/**\n * Calculate the scale function, position, width, height of axes\n * @param  {Object} props     Latest props\n * @param  {Object} axisMap   The configuration of axes\n * @param  {Object} offset    The offset of main part in the svg element\n * @param  {String} axisType  The type of axes, x-axis or y-axis\n * @param  {String} chartName The name of chart\n * @return {Object} Configuration\n */\n\nexport var formatAxisMap = function formatAxisMap(props, axisMap, offset, axisType, chartName) {\n  var width = props.width,\n      height = props.height,\n      layout = props.layout,\n      children = props.children;\n  var ids = Object.keys(axisMap);\n  var steps = {\n    left: offset.left,\n    leftMirror: offset.left,\n    right: width - offset.right,\n    rightMirror: width - offset.right,\n    top: offset.top,\n    topMirror: offset.top,\n    bottom: height - offset.bottom,\n    bottomMirror: height - offset.bottom\n  };\n  var hasBar = !!findChildByType(children, Bar);\n  return ids.reduce(function (result, id) {\n    var axis = axisMap[id];\n    var orientation = axis.orientation,\n        domain = axis.domain,\n        _axis$padding = axis.padding,\n        padding = _axis$padding === void 0 ? {} : _axis$padding,\n        mirror = axis.mirror,\n        reversed = axis.reversed;\n    var offsetKey = \"\".concat(orientation).concat(mirror ? 'Mirror' : '');\n    var calculatedPadding, range, x, y, needSpace;\n\n    if (axis.type === 'number' && (axis.padding === 'gap' || axis.padding === 'no-gap')) {\n      var diff = domain[1] - domain[0];\n      var smallestDistanceBetweenValues = Infinity;\n      var sortedValues = axis.categoricalDomain.sort();\n      sortedValues.forEach(function (value, index) {\n        if (index > 0) {\n          smallestDistanceBetweenValues = Math.min((value || 0) - (sortedValues[index - 1] || 0), smallestDistanceBetweenValues);\n        }\n      });\n      var smallestDistanceInPercent = smallestDistanceBetweenValues / diff;\n      var rangeWidth = axis.layout === 'vertical' ? offset.height : offset.width;\n\n      if (axis.padding === 'gap') {\n        calculatedPadding = smallestDistanceInPercent * rangeWidth / 2;\n      }\n\n      if (axis.padding === 'no-gap') {\n        var gap = getPercentValue(props.barCategoryGap, smallestDistanceInPercent * rangeWidth);\n        var halfBand = smallestDistanceInPercent * rangeWidth / 2;\n        calculatedPadding = halfBand - gap - (halfBand - gap) / rangeWidth * gap;\n      }\n    }\n\n    if (axisType === 'xAxis') {\n      range = [offset.left + (padding.left || 0) + (calculatedPadding || 0), offset.left + offset.width - (padding.right || 0) - (calculatedPadding || 0)];\n    } else if (axisType === 'yAxis') {\n      range = layout === 'horizontal' ? [offset.top + offset.height - (padding.bottom || 0), offset.top + (padding.top || 0)] : [offset.top + (padding.top || 0) + (calculatedPadding || 0), offset.top + offset.height - (padding.bottom || 0) - (calculatedPadding || 0)];\n    } else {\n      range = axis.range;\n    }\n\n    if (reversed) {\n      range = [range[1], range[0]];\n    }\n\n    var _parseScale = parseScale(axis, chartName, hasBar),\n        scale = _parseScale.scale,\n        realScaleType = _parseScale.realScaleType;\n\n    scale.domain(domain).range(range);\n    checkDomainOfScale(scale);\n    var ticks = getTicksOfScale(scale, _objectSpread(_objectSpread({}, axis), {}, {\n      realScaleType: realScaleType\n    }));\n\n    if (axisType === 'xAxis') {\n      needSpace = orientation === 'top' && !mirror || orientation === 'bottom' && mirror;\n      x = offset.left;\n      y = steps[offsetKey] - needSpace * axis.height;\n    } else if (axisType === 'yAxis') {\n      needSpace = orientation === 'left' && !mirror || orientation === 'right' && mirror;\n      x = steps[offsetKey] - needSpace * axis.width;\n      y = offset.top;\n    }\n\n    var finalAxis = _objectSpread(_objectSpread(_objectSpread({}, axis), ticks), {}, {\n      realScaleType: realScaleType,\n      x: x,\n      y: y,\n      scale: scale,\n      width: axisType === 'xAxis' ? offset.width : axis.width,\n      height: axisType === 'yAxis' ? offset.height : axis.height\n    });\n\n    finalAxis.bandSize = getBandSizeOfAxis(finalAxis, ticks);\n\n    if (!axis.hide && axisType === 'xAxis') {\n      steps[offsetKey] += (needSpace ? -1 : 1) * finalAxis.height;\n    } else if (!axis.hide) {\n      steps[offsetKey] += (needSpace ? -1 : 1) * finalAxis.width;\n    }\n\n    return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, id, finalAxis));\n  }, {});\n};\nexport var rectWithPoints = function rectWithPoints(_ref, _ref2) {\n  var x1 = _ref.x,\n      y1 = _ref.y;\n  var x2 = _ref2.x,\n      y2 = _ref2.y;\n  return {\n    x: Math.min(x1, x2),\n    y: Math.min(y1, y2),\n    width: Math.abs(x2 - x1),\n    height: Math.abs(y2 - y1)\n  };\n};\n/**\n * Compute the x, y, width, and height of a box from two reference points.\n * @param  {Object} coords     x1, x2, y1, and y2\n * @return {Object} object\n */\n\nexport var rectWithCoords = function rectWithCoords(_ref3) {\n  var x1 = _ref3.x1,\n      y1 = _ref3.y1,\n      x2 = _ref3.x2,\n      y2 = _ref3.y2;\n  return rectWithPoints({\n    x: x1,\n    y: y1\n  }, {\n    x: x2,\n    y: y2\n  });\n};\nexport var ScaleHelper = /*#__PURE__*/function () {\n  function ScaleHelper(scale) {\n    _classCallCheck(this, ScaleHelper);\n\n    this.scale = scale;\n  }\n\n  _createClass(ScaleHelper, [{\n    key: \"domain\",\n    get: function get() {\n      return this.scale.domain;\n    }\n  }, {\n    key: \"range\",\n    get: function get() {\n      return this.scale.range;\n    }\n  }, {\n    key: \"rangeMin\",\n    get: function get() {\n      return this.range()[0];\n    }\n  }, {\n    key: \"rangeMax\",\n    get: function get() {\n      return this.range()[1];\n    }\n  }, {\n    key: \"bandwidth\",\n    get: function get() {\n      return this.scale.bandwidth;\n    }\n  }, {\n    key: \"apply\",\n    value: function apply(value) {\n      var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          bandAware = _ref4.bandAware,\n          position = _ref4.position;\n\n      if (value === undefined) {\n        return undefined;\n      }\n\n      if (position) {\n        switch (position) {\n          case 'start':\n            {\n              return this.scale(value);\n            }\n\n          case 'middle':\n            {\n              var offset = this.bandwidth ? this.bandwidth() / 2 : 0;\n              return this.scale(value) + offset;\n            }\n\n          case 'end':\n            {\n              var _offset = this.bandwidth ? this.bandwidth() : 0;\n\n              return this.scale(value) + _offset;\n            }\n\n          default:\n            {\n              return this.scale(value);\n            }\n        }\n      }\n\n      if (bandAware) {\n        var _offset2 = this.bandwidth ? this.bandwidth() / 2 : 0;\n\n        return this.scale(value) + _offset2;\n      }\n\n      return this.scale(value);\n    }\n  }, {\n    key: \"isInRange\",\n    value: function isInRange(value) {\n      var range = this.range();\n      var first = range[0];\n      var last = range[range.length - 1];\n      return first <= last ? value >= first && value <= last : value >= last && value <= first;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(obj) {\n      return new ScaleHelper(obj);\n    }\n  }]);\n\n  return ScaleHelper;\n}();\n\n_defineProperty(ScaleHelper, \"EPS\", 1e-4);\n\nexport var createLabeledScales = function createLabeledScales(options) {\n  var scales = Object.keys(options).reduce(function (res, key) {\n    return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, key, ScaleHelper.create(options[key])));\n  }, {});\n  return _objectSpread(_objectSpread({}, scales), {}, {\n    apply: function apply(coord) {\n      var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          bandAware = _ref5.bandAware,\n          position = _ref5.position;\n\n      return _mapValues(coord, function (value, label) {\n        return scales[label].apply(value, {\n          bandAware: bandAware,\n          position: position\n        });\n      });\n    },\n    isInRange: function isInRange(coord) {\n      return _every(coord, function (value, label) {\n        return scales[label].isInRange(value);\n      });\n    }\n  });\n};\n/** Normalizes the angle so that 0 <= angle < 180.\n * @param {number} angle Angle in degrees.\n * @return {number} the normalized angle with a value of at least 0 and never greater or equal to 180. */\n\nexport function normalizeAngle(angle) {\n  return (angle % 180 + 180) % 180;\n}\n/** Calculates the width of the largest horizontal line that fits inside a rectangle that is displayed at an angle.\n * @param {Object} size Width and height of the text in a horizontal position.\n * @param {number} angle Angle in degrees in which the text is displayed.\n * @return {number} The width of the largest horizontal line that fits inside a rectangle that is displayed at an angle.\n */\n\nexport var getAngledRectangleWidth = function getAngledRectangleWidth(_ref6) {\n  var width = _ref6.width,\n      height = _ref6.height;\n  var angle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Ensure angle is >= 0 && < 180\n\n  var normalizedAngle = normalizeAngle(angle);\n  var angleRadians = normalizedAngle * Math.PI / 180;\n  /* Depending on the height and width of the rectangle, we may need to use different formulas to calculate the angled\n   * width. This threshold defines when each formula should kick in. */\n\n  var angleThreshold = Math.atan(height / width);\n  var angledWidth = angleRadians > angleThreshold && angleRadians < Math.PI - angleThreshold ? height / Math.sin(angleRadians) : width / Math.cos(angleRadians);\n  return Math.abs(angledWidth);\n};","map":{"version":3,"sources":["/workspaces/Glocafe1/node_modules/recharts/es6/util/CartesianUtils.js"],"names":["_every","_mapValues","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread","arguments","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","getTicksOfScale","parseScale","checkDomainOfScale","getBandSizeOfAxis","findChildByType","getPercentValue","Bar","formatAxisMap","axisMap","offset","axisType","chartName","width","height","layout","children","ids","steps","left","leftMirror","right","rightMirror","top","topMirror","bottom","bottomMirror","hasBar","reduce","result","id","axis","orientation","domain","_axis$padding","padding","mirror","reversed","offsetKey","concat","calculatedPadding","range","x","y","needSpace","type","diff","smallestDistanceBetweenValues","Infinity","sortedValues","categoricalDomain","sort","index","Math","min","smallestDistanceInPercent","rangeWidth","gap","barCategoryGap","halfBand","_parseScale","scale","realScaleType","ticks","finalAxis","bandSize","hide","rectWithPoints","_ref","_ref2","x1","y1","x2","y2","abs","rectWithCoords","_ref3","ScaleHelper","get","bandwidth","_ref4","bandAware","position","_offset","_offset2","isInRange","first","last","create","createLabeledScales","options","scales","coord","_ref5","label","normalizeAngle","angle","getAngledRectangleWidth","_ref6","normalizedAngle","angleRadians","PI","angleThreshold","atan","angledWidth","sin","cos"],"mappings":"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","sourcesContent":["import _every from \"lodash/every\";\nimport _mapValues from \"lodash/mapValues\";\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { getTicksOfScale, parseScale, checkDomainOfScale, getBandSizeOfAxis } from './ChartUtils';\nimport { findChildByType } from './ReactUtils';\nimport { getPercentValue } from './DataUtils';\nimport { Bar } from '../cartesian/Bar';\n\n/**\n * Calculate the scale function, position, width, height of axes\n * @param  {Object} props     Latest props\n * @param  {Object} axisMap   The configuration of axes\n * @param  {Object} offset    The offset of main part in the svg element\n * @param  {String} axisType  The type of axes, x-axis or y-axis\n * @param  {String} chartName The name of chart\n * @return {Object} Configuration\n */\nexport var formatAxisMap = function formatAxisMap(props, axisMap, offset, axisType, chartName) {\n  var width = props.width,\n    height = props.height,\n    layout = props.layout,\n    children = props.children;\n  var ids = Object.keys(axisMap);\n  var steps = {\n    left: offset.left,\n    leftMirror: offset.left,\n    right: width - offset.right,\n    rightMirror: width - offset.right,\n    top: offset.top,\n    topMirror: offset.top,\n    bottom: height - offset.bottom,\n    bottomMirror: height - offset.bottom\n  };\n  var hasBar = !!findChildByType(children, Bar);\n  return ids.reduce(function (result, id) {\n    var axis = axisMap[id];\n    var orientation = axis.orientation,\n      domain = axis.domain,\n      _axis$padding = axis.padding,\n      padding = _axis$padding === void 0 ? {} : _axis$padding,\n      mirror = axis.mirror,\n      reversed = axis.reversed;\n    var offsetKey = \"\".concat(orientation).concat(mirror ? 'Mirror' : '');\n    var calculatedPadding, range, x, y, needSpace;\n    if (axis.type === 'number' && (axis.padding === 'gap' || axis.padding === 'no-gap')) {\n      var diff = domain[1] - domain[0];\n      var smallestDistanceBetweenValues = Infinity;\n      var sortedValues = axis.categoricalDomain.sort();\n      sortedValues.forEach(function (value, index) {\n        if (index > 0) {\n          smallestDistanceBetweenValues = Math.min((value || 0) - (sortedValues[index - 1] || 0), smallestDistanceBetweenValues);\n        }\n      });\n      var smallestDistanceInPercent = smallestDistanceBetweenValues / diff;\n      var rangeWidth = axis.layout === 'vertical' ? offset.height : offset.width;\n      if (axis.padding === 'gap') {\n        calculatedPadding = smallestDistanceInPercent * rangeWidth / 2;\n      }\n      if (axis.padding === 'no-gap') {\n        var gap = getPercentValue(props.barCategoryGap, smallestDistanceInPercent * rangeWidth);\n        var halfBand = smallestDistanceInPercent * rangeWidth / 2;\n        calculatedPadding = halfBand - gap - (halfBand - gap) / rangeWidth * gap;\n      }\n    }\n    if (axisType === 'xAxis') {\n      range = [offset.left + (padding.left || 0) + (calculatedPadding || 0), offset.left + offset.width - (padding.right || 0) - (calculatedPadding || 0)];\n    } else if (axisType === 'yAxis') {\n      range = layout === 'horizontal' ? [offset.top + offset.height - (padding.bottom || 0), offset.top + (padding.top || 0)] : [offset.top + (padding.top || 0) + (calculatedPadding || 0), offset.top + offset.height - (padding.bottom || 0) - (calculatedPadding || 0)];\n    } else {\n      range = axis.range;\n    }\n    if (reversed) {\n      range = [range[1], range[0]];\n    }\n    var _parseScale = parseScale(axis, chartName, hasBar),\n      scale = _parseScale.scale,\n      realScaleType = _parseScale.realScaleType;\n    scale.domain(domain).range(range);\n    checkDomainOfScale(scale);\n    var ticks = getTicksOfScale(scale, _objectSpread(_objectSpread({}, axis), {}, {\n      realScaleType: realScaleType\n    }));\n    if (axisType === 'xAxis') {\n      needSpace = orientation === 'top' && !mirror || orientation === 'bottom' && mirror;\n      x = offset.left;\n      y = steps[offsetKey] - needSpace * axis.height;\n    } else if (axisType === 'yAxis') {\n      needSpace = orientation === 'left' && !mirror || orientation === 'right' && mirror;\n      x = steps[offsetKey] - needSpace * axis.width;\n      y = offset.top;\n    }\n    var finalAxis = _objectSpread(_objectSpread(_objectSpread({}, axis), ticks), {}, {\n      realScaleType: realScaleType,\n      x: x,\n      y: y,\n      scale: scale,\n      width: axisType === 'xAxis' ? offset.width : axis.width,\n      height: axisType === 'yAxis' ? offset.height : axis.height\n    });\n    finalAxis.bandSize = getBandSizeOfAxis(finalAxis, ticks);\n    if (!axis.hide && axisType === 'xAxis') {\n      steps[offsetKey] += (needSpace ? -1 : 1) * finalAxis.height;\n    } else if (!axis.hide) {\n      steps[offsetKey] += (needSpace ? -1 : 1) * finalAxis.width;\n    }\n    return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, id, finalAxis));\n  }, {});\n};\nexport var rectWithPoints = function rectWithPoints(_ref, _ref2) {\n  var x1 = _ref.x,\n    y1 = _ref.y;\n  var x2 = _ref2.x,\n    y2 = _ref2.y;\n  return {\n    x: Math.min(x1, x2),\n    y: Math.min(y1, y2),\n    width: Math.abs(x2 - x1),\n    height: Math.abs(y2 - y1)\n  };\n};\n\n/**\n * Compute the x, y, width, and height of a box from two reference points.\n * @param  {Object} coords     x1, x2, y1, and y2\n * @return {Object} object\n */\nexport var rectWithCoords = function rectWithCoords(_ref3) {\n  var x1 = _ref3.x1,\n    y1 = _ref3.y1,\n    x2 = _ref3.x2,\n    y2 = _ref3.y2;\n  return rectWithPoints({\n    x: x1,\n    y: y1\n  }, {\n    x: x2,\n    y: y2\n  });\n};\nexport var ScaleHelper = /*#__PURE__*/function () {\n  function ScaleHelper(scale) {\n    _classCallCheck(this, ScaleHelper);\n    this.scale = scale;\n  }\n  _createClass(ScaleHelper, [{\n    key: \"domain\",\n    get: function get() {\n      return this.scale.domain;\n    }\n  }, {\n    key: \"range\",\n    get: function get() {\n      return this.scale.range;\n    }\n  }, {\n    key: \"rangeMin\",\n    get: function get() {\n      return this.range()[0];\n    }\n  }, {\n    key: \"rangeMax\",\n    get: function get() {\n      return this.range()[1];\n    }\n  }, {\n    key: \"bandwidth\",\n    get: function get() {\n      return this.scale.bandwidth;\n    }\n  }, {\n    key: \"apply\",\n    value: function apply(value) {\n      var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        bandAware = _ref4.bandAware,\n        position = _ref4.position;\n      if (value === undefined) {\n        return undefined;\n      }\n      if (position) {\n        switch (position) {\n          case 'start':\n            {\n              return this.scale(value);\n            }\n          case 'middle':\n            {\n              var offset = this.bandwidth ? this.bandwidth() / 2 : 0;\n              return this.scale(value) + offset;\n            }\n          case 'end':\n            {\n              var _offset = this.bandwidth ? this.bandwidth() : 0;\n              return this.scale(value) + _offset;\n            }\n          default:\n            {\n              return this.scale(value);\n            }\n        }\n      }\n      if (bandAware) {\n        var _offset2 = this.bandwidth ? this.bandwidth() / 2 : 0;\n        return this.scale(value) + _offset2;\n      }\n      return this.scale(value);\n    }\n  }, {\n    key: \"isInRange\",\n    value: function isInRange(value) {\n      var range = this.range();\n      var first = range[0];\n      var last = range[range.length - 1];\n      return first <= last ? value >= first && value <= last : value >= last && value <= first;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(obj) {\n      return new ScaleHelper(obj);\n    }\n  }]);\n  return ScaleHelper;\n}();\n_defineProperty(ScaleHelper, \"EPS\", 1e-4);\nexport var createLabeledScales = function createLabeledScales(options) {\n  var scales = Object.keys(options).reduce(function (res, key) {\n    return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, key, ScaleHelper.create(options[key])));\n  }, {});\n  return _objectSpread(_objectSpread({}, scales), {}, {\n    apply: function apply(coord) {\n      var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        bandAware = _ref5.bandAware,\n        position = _ref5.position;\n      return _mapValues(coord, function (value, label) {\n        return scales[label].apply(value, {\n          bandAware: bandAware,\n          position: position\n        });\n      });\n    },\n    isInRange: function isInRange(coord) {\n      return _every(coord, function (value, label) {\n        return scales[label].isInRange(value);\n      });\n    }\n  });\n};\n\n/** Normalizes the angle so that 0 <= angle < 180.\n * @param {number} angle Angle in degrees.\n * @return {number} the normalized angle with a value of at least 0 and never greater or equal to 180. */\nexport function normalizeAngle(angle) {\n  return (angle % 180 + 180) % 180;\n}\n\n/** Calculates the width of the largest horizontal line that fits inside a rectangle that is displayed at an angle.\n * @param {Object} size Width and height of the text in a horizontal position.\n * @param {number} angle Angle in degrees in which the text is displayed.\n * @return {number} The width of the largest horizontal line that fits inside a rectangle that is displayed at an angle.\n */\nexport var getAngledRectangleWidth = function getAngledRectangleWidth(_ref6) {\n  var width = _ref6.width,\n    height = _ref6.height;\n  var angle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Ensure angle is >= 0 && < 180\n  var normalizedAngle = normalizeAngle(angle);\n  var angleRadians = normalizedAngle * Math.PI / 180;\n\n  /* Depending on the height and width of the rectangle, we may need to use different formulas to calculate the angled\n   * width. This threshold defines when each formula should kick in. */\n  var angleThreshold = Math.atan(height / width);\n  var angledWidth = angleRadians > angleThreshold && angleRadians < Math.PI - angleThreshold ? height / Math.sin(angleRadians) : width / Math.cos(angleRadians);\n  return Math.abs(angledWidth);\n};"]},"metadata":{},"sourceType":"module"}
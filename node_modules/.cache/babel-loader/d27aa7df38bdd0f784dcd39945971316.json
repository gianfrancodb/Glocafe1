{"ast":null,"code":"var _jsxFileName = \"/workspaces/Glocafe1/src/components/Home/CoffeePrices.js\";\nimport React, { useEffect, useState } from 'react';\n\nconst CommoditiesPrices = () => {\n  const [prices, setPrices] = useState({\n    COFFEE: null,\n    ROBUSTA: null\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`https://commodities-api.com/api/latest?access_key=nc4rq9ho37s9r4m7r7bd4jaw46b940amnq40h71wcj54cbfweprfm113awf4&base=USD&symbols=COFFEE,ROBUSTA`);\n        const data = await response.json(); // Convert the received rates into prices\n\n        const coffeePrice = 1 / data.rates.COFFEE;\n        const robustaPrice = 1 / data.rates.ROBUSTA;\n        setPrices({\n          COFFEE: coffeePrice,\n          ROBUSTA: robustaPrice\n        });\n      } catch (error) {\n        console.error(\"Error fetching commodities data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '10px',\n      border: '1px solid black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Ara: $\", prices.COFFEE && prices.COFFEE.toFixed(2)), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '10px',\n      border: '1px solid black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Robusta (ROBUSTA): $\", prices.ROBUSTA && prices.ROBUSTA.toFixed(2)));\n};\n\nexport default CommoditiesPrices;","map":{"version":3,"sources":["/workspaces/Glocafe1/src/components/Home/CoffeePrices.js"],"names":["React","useEffect","useState","CommoditiesPrices","prices","setPrices","COFFEE","ROBUSTA","fetchData","response","fetch","data","json","coffeePrice","rates","robustaPrice","error","console","display","justifyContent","padding","border","toFixed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC;AAAEI,IAAAA,MAAM,EAAE,IAAV;AAAgBC,IAAAA,OAAO,EAAE;AAAzB,GAAD,CAApC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,SAAS,GAAG,YAAY;AAC1B,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gJAAF,CAA5B;AACA,cAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB,CAFA,CAIA;;AACA,cAAMC,WAAW,GAAG,IAAIF,IAAI,CAACG,KAAL,CAAWR,MAAnC;AACA,cAAMS,YAAY,GAAG,IAAIJ,IAAI,CAACG,KAAL,CAAWP,OAApC;AAEAF,QAAAA,SAAS,CAAC;AAAEC,UAAAA,MAAM,EAAEO,WAAV;AAAuBN,UAAAA,OAAO,EAAEQ;AAAhC,SAAD,CAAT;AACH,OATD,CASE,OAAOC,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAc,kCAAd,EAAkDA,KAAlD;AACH;AACJ,KAbD;;AAeAR,IAAAA,SAAS;AACZ,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEU,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE;AAAnC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,MAAM,EAAE;AAA3B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACWjB,MAAM,CAACE,MAAP,IAAiBF,MAAM,CAACE,MAAP,CAAcgB,OAAd,CAAsB,CAAtB,CAD5B,CADJ,eAII;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,MAAM,EAAE;AAA3B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACyBjB,MAAM,CAACG,OAAP,IAAkBH,MAAM,CAACG,OAAP,CAAee,OAAf,CAAuB,CAAvB,CAD3C,CAJJ,CADJ;AAUH,CAhCD;;AAkCA,eAAenB,iBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst CommoditiesPrices = () => {\n    const [prices, setPrices] = useState({ COFFEE: null, ROBUSTA: null });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch(`https://commodities-api.com/api/latest?access_key=nc4rq9ho37s9r4m7r7bd4jaw46b940amnq40h71wcj54cbfweprfm113awf4&base=USD&symbols=COFFEE,ROBUSTA`);\n                const data = await response.json();\n\n                // Convert the received rates into prices\n                const coffeePrice = 1 / data.rates.COFFEE;\n                const robustaPrice = 1 / data.rates.ROBUSTA;\n\n                setPrices({ COFFEE: coffeePrice, ROBUSTA: robustaPrice });\n            } catch (error) {\n                console.error(\"Error fetching commodities data:\", error);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    return (\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <div style={{ padding: '10px', border: '1px solid black' }}>\n                Ara: ${prices.COFFEE && prices.COFFEE.toFixed(2)}\n            </div>\n            <div style={{ padding: '10px', border: '1px solid black' }}>\n                Robusta (ROBUSTA): ${prices.ROBUSTA && prices.ROBUSTA.toFixed(2)}\n            </div>\n        </div>\n    );\n};\n\nexport default CommoditiesPrices;\n"]},"metadata":{},"sourceType":"module"}
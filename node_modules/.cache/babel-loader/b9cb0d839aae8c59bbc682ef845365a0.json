{"ast":null,"code":"var _jsxFileName = \"/workspaces/Glocafe1/src/components/Home/CoffeePrices.js\";\nimport React, { useEffect, useState } from 'react';\n\nconst CommoditiesPrices = () => {\n  const [prices, setPrices] = useState({\n    COFFEE: null,\n    ROBUSTA: null\n  });\n  const divStyle = {\n    background: 'rgba(255,255,255,0.35)',\n    boxShadow: '20px 20px 40px -6px rgba(0,0,0,0.2)',\n    backdropFilter: 'blur(10.5px)',\n    WebkitBackdropFilter: 'blur(10.5px)',\n    borderRadius: '10px',\n    padding: '10px',\n    border: '1px solid black',\n    margin: '5px' // Added a margin for spacing between the divs\n\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`https://commodities-api.com/api/latest?access_key=nc4rq9ho37s9r4m7r7bd4jaw46b940amnq40h71wcj54cbfweprfm113awf4&base=USD&symbols=COFFEE,ROBUSTA`);\n        const data = await response.json();\n        console.log(\"API Response:\", data); // Log the API response\n        // Check if data.rates exists\n\n        if (data && data.rates) {\n          const coffeePrice = data.rates.COFFEE;\n          const robustaPrice = data.rates.ROBUSTA;\n          setPrices({\n            COFFEE: coffeePrice,\n            ROBUSTA: robustaPrice\n          });\n        } else {\n          console.warn(\"Unexpected API response structure\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching commodities data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: divStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Latest Price (ARABICA): $\", prices.COFFEE && prices.COFFEE.toFixed(2), \" per lb\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: divStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Latest Price (ROBUSTA): $\", prices.ROBUSTA && prices.ROBUSTA.toFixed(2), \" per lb\"));\n};\n\nexport default CommoditiesPrices;","map":{"version":3,"sources":["/workspaces/Glocafe1/src/components/Home/CoffeePrices.js"],"names":["React","useEffect","useState","CommoditiesPrices","prices","setPrices","COFFEE","ROBUSTA","divStyle","background","boxShadow","backdropFilter","WebkitBackdropFilter","borderRadius","padding","border","margin","fetchData","response","fetch","data","json","console","log","rates","coffeePrice","robustaPrice","warn","error","display","justifyContent","toFixed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC;AAAEI,IAAAA,MAAM,EAAE,IAAV;AAAgBC,IAAAA,OAAO,EAAE;AAAzB,GAAD,CAApC;AACA,QAAMC,QAAQ,GAAG;AACbC,IAAAA,UAAU,EAAE,wBADC;AAEbC,IAAAA,SAAS,EAAE,qCAFE;AAGbC,IAAAA,cAAc,EAAE,cAHH;AAIbC,IAAAA,oBAAoB,EAAE,cAJT;AAKbC,IAAAA,YAAY,EAAE,MALD;AAMbC,IAAAA,OAAO,EAAE,MANI;AAObC,IAAAA,MAAM,EAAE,iBAPK;AAQbC,IAAAA,MAAM,EAAE,KARK,CAQC;;AARD,GAAjB;AAYAf,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,SAAS,GAAG,YAAY;AAC1B,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gJAAF,CAA5B;AACA,cAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,IAA7B,EAJA,CAIqC;AAErC;;AACA,YAAIA,IAAI,IAAIA,IAAI,CAACI,KAAjB,EAAwB;AACpB,gBAAMC,WAAW,GAAGL,IAAI,CAACI,KAAL,CAAWlB,MAA/B;AACA,gBAAMoB,YAAY,GAAGN,IAAI,CAACI,KAAL,CAAWjB,OAAhC;AAEAF,UAAAA,SAAS,CAAC;AAAEC,YAAAA,MAAM,EAAEmB,WAAV;AAAuBlB,YAAAA,OAAO,EAAEmB;AAAhC,WAAD,CAAT;AACH,SALD,MAKO;AACHJ,UAAAA,OAAO,CAACK,IAAR,CAAa,mCAAb;AACH;AAEJ,OAhBD,CAgBE,OAAOC,KAAP,EAAc;AACZN,QAAAA,OAAO,CAACM,KAAR,CAAc,kCAAd,EAAkDA,KAAlD;AACH;AACJ,KApBD;;AAsBAX,IAAAA,SAAS;AACZ,GAxBQ,EAwBN,EAxBM,CAAT;AA0BA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEY,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE;AAAnC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,KAAK,EAAEtB,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAC8BJ,MAAM,CAACE,MAAP,IAAiBF,MAAM,CAACE,MAAP,CAAcyB,OAAd,CAAsB,CAAtB,CAD/C,YADA,eAIA;AAAK,IAAA,KAAK,EAAEvB,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAC0BJ,MAAM,CAACG,OAAP,IAAkBH,MAAM,CAACG,OAAP,CAAewB,OAAf,CAAuB,CAAvB,CAD5C,YAJA,CADJ;AAUH,CAlDD;;AAoDA,eAAe5B,iBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst CommoditiesPrices = () => {\n    const [prices, setPrices] = useState({ COFFEE: null, ROBUSTA: null });\n    const divStyle = {\n        background: 'rgba(255,255,255,0.35)',\n        boxShadow: '20px 20px 40px -6px rgba(0,0,0,0.2)',\n        backdropFilter: 'blur(10.5px)',\n        WebkitBackdropFilter: 'blur(10.5px)',\n        borderRadius: '10px',\n        padding: '10px',\n        border: '1px solid black',\n        margin: '5px' // Added a margin for spacing between the divs\n    };\n\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch(`https://commodities-api.com/api/latest?access_key=nc4rq9ho37s9r4m7r7bd4jaw46b940amnq40h71wcj54cbfweprfm113awf4&base=USD&symbols=COFFEE,ROBUSTA`);\n                const data = await response.json();\n\n                console.log(\"API Response:\", data);  // Log the API response\n\n                // Check if data.rates exists\n                if (data && data.rates) {\n                    const coffeePrice = data.rates.COFFEE;\n                    const robustaPrice = data.rates.ROBUSTA;\n\n                    setPrices({ COFFEE: coffeePrice, ROBUSTA: robustaPrice });\n                } else {\n                    console.warn(\"Unexpected API response structure\");\n                }\n                \n            } catch (error) {\n                console.error(\"Error fetching commodities data:\", error);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    return (\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <div style={divStyle}>\n            Latest Price (ARABICA): ${prices.COFFEE && prices.COFFEE.toFixed(2)} per lb\n        </div>\n        <div style={divStyle}>\n        Latest Price (ROBUSTA): ${prices.ROBUSTA && prices.ROBUSTA.toFixed(2)} per lb\n        </div>\n    </div>\n    );\n};\n\nexport default CommoditiesPrices;\n\n"]},"metadata":{},"sourceType":"module"}